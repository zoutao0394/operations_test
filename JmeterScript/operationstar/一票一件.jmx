<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="time" elementType="Argument">
            <stringProp name="Argument.name">time</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="time1" elementType="Argument">
            <stringProp name="Argument.name">time1</stringProp>
            <stringProp name="Argument.value">${__time(HHmmss,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="phone" elementType="Argument">
            <stringProp name="Argument.name">phone</stringProp>
            <stringProp name="Argument.value">${__Random(13000000000,13900000000,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="time2" elementType="Argument">
            <stringProp name="Argument.name">time2</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="time+" elementType="Argument">
            <stringProp name="Argument.name">time+</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd+HH:mm:ss,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inventoryVersion" elementType="Argument">
            <stringProp name="Argument.name">inventoryVersion</stringProp>
            <stringProp name="Argument.value">${__time(yyyyMMdd0000,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inventoryTime" elementType="Argument">
            <stringProp name="Argument.name">inventoryTime</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="operatorTime" elementType="Argument">
            <stringProp name="Argument.name">operatorTime</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd 00:00:00,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="num" elementType="Argument">
            <stringProp name="Argument.name">num</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="time3" elementType="Argument">
            <stringProp name="Argument.name">time3</stringProp>
            <stringProp name="Argument.value">${__timeShift(,ss,,,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="一票一件" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">2</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="控制器" enabled="true">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">control</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie管理器" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        </CookieManager>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">select 1</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">test</stringProp>
          <stringProp name="dbUrl">jdbc:mysql://172.16.20.5:33306/autotest?useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=UTC</stringProp>
          <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">123456</stringProp>
          <stringProp name="poolMax">10</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">testuser</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="运行流程" enabled="true">
          <stringProp name="IfController.condition">${control} == 0;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="加载初始信息" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="标记任务开始" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">update auto_operation set status=1,result=&apos;上次执行：运行中&apos; where operation=&quot;全量出库&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取账号" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">select testuser from auto_testuser where status=0 limit 1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">user</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="锁定账号" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">update auto_testuser set status=1 where testuser=&apos;${user_1}&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">user</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取仓库及会员信息" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">SELECT
	warehouseID,
	warehousename,
	memberID,
	membername,
	memberno 
FROM
	auto_warehouemember 
WHERE
	id = ( SELECT warehousememberid FROM auto_control WHERE STATUS = 0 and userid = (select userid from auto_user where `user` = &apos;zoutao&apos;) );</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">warehouseID,warehousename,memberID,membername,memberno</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取oms配置信息" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">SELECT HOST
	,
PORT 
FROM
	auto_host t1
	JOIN auto_warehouemember t2 ON t1.environmentid = t2.environmentid
	JOIN auto_control t3 ON t2.id = t3.warehousememberid 
WHERE
	t3.`status` = 0 
	and t3. userid = (select userid from auto_user where `user` = &apos;zoutao&apos;)
	AND t1.site = &apos;oms&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">omshost,omsport</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取wi配置信息" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">SELECT HOST
	,
PORT 
FROM
	auto_host t1
	JOIN auto_warehouemember t2 ON t1.environmentid = t2.environmentid
	JOIN auto_control t3 ON t2.id = t3.warehousememberid 
WHERE
	t3.`status` = 0 
	and t3. userid = (select userid from auto_user where `user` = &apos;zoutao&apos;)
	AND t1.site = &apos;wi&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">wihost,wiport</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取basic配置信息" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">SELECT HOST
	,
PORT ,
t4.code
FROM
	auto_host t1
	JOIN auto_warehouemember t2 ON t1.environmentid = t2.environmentid
	JOIN auto_control t3 ON t2.id = t3.warehousememberid 
	JOIN auto_environment t4 on t1.environmentid = t4.environmentid
WHERE
	t3.`status` = 0 
	and t3. userid = (select userid from auto_user where `user` = &apos;zoutao&apos;)
	AND t1.site = &apos;basic&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">basichost,basicport,code</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取os配置信息" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">SELECT HOST
	,
PORT 
FROM
	auto_host t1
	JOIN auto_warehouemember t2 ON t1.environmentid = t2.environmentid
	JOIN auto_control t3 ON t2.id = t3.warehousememberid 
WHERE
	t3.`status` = 0 
	and t3. userid = (select userid from auto_user where `user` = &apos;zoutao&apos;)
	AND t1.site = &apos;os&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">oshost,osport</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取opw配置信息" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">SELECT HOST
	,
PORT 
FROM
	auto_host t1
	JOIN auto_warehouemember t2 ON t1.environmentid = t2.environmentid
	JOIN auto_control t3 ON t2.id = t3.warehousememberid 
WHERE
	t3.`status` = 0 
	and t3. userid = (select userid from auto_user where `user` = &apos;zoutao&apos;)
	AND t1.site = &apos;opw&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">opwhost,opwport</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取op配置信息" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">SELECT HOST
	,
PORT 
FROM
	auto_host t1
	JOIN auto_warehouemember t2 ON t1.environmentid = t2.environmentid
	JOIN auto_control t3 ON t2.id = t3.warehousememberid 
WHERE
	t3.`status` = 0 
	and t3. userid = (select userid from auto_user where `user` = &apos;zoutao&apos;)
	AND t1.site = &apos;op&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">ophost,opport</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取opr配置信息" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">SELECT HOST
	,
PORT 
FROM
	auto_host t1
	JOIN auto_warehouemember t2 ON t1.environmentid = t2.environmentid
	JOIN auto_control t3 ON t2.id = t3.warehousememberid 
WHERE
	t3.`status` = 0 
	and t3. userid = (select userid from auto_user where `user` = &apos;zoutao&apos;)
	AND t1.site = &apos;opr&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">oprhost,oprport</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取master配置信息" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">SELECT HOST
	,
PORT 
FROM
	auto_host t1
	JOIN auto_warehouemember t2 ON t1.environmentid = t2.environmentid
	JOIN auto_control t3 ON t2.id = t3.warehousememberid 
WHERE
	t3.`status` = 0 
	and t3. userid = (select userid from auto_user where `user` = &apos;zoutao&apos;)
	AND t1.site = &apos;master&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">masterhost,masterport</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取so配置信息" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">SELECT HOST
	,
PORT 
FROM
	auto_host t1
	JOIN auto_warehouemember t2 ON t1.environmentid = t2.environmentid
	JOIN auto_control t3 ON t2.id = t3.warehousememberid 
WHERE
	t3.`status` = 0 
	and t3. userid = (select userid from auto_user where `user` = &apos;zoutao&apos;)
	AND t1.site = &apos;so&apos;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">sohost,soport</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="获取账号" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">select testuser from auto_testuser where status=0 limit 1;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Select Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">user</stringProp>
            </JDBCSampler>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="登陆" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="LoginNo" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginNo</stringProp>
                    <stringProp name="Argument.value">${user_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ComputerId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ComputerId</stringProp>
                    <stringProp name="Argument.value">9df2587225bb9a5cfffedef84491c4dc</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="AppKey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">AppKey</stringProp>
                    <stringProp name="Argument.value">670b14728ad9902aecba32e22fa4dd34</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ReturnUrl" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ReturnUrl</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="LoginPassword" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">LoginPassword</stringProp>
                    <stringProp name="Argument.value">a123456</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CaptchaValidator" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${code_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">CaptchaValidator</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${basichost_1}</stringProp>
              <stringProp name="HTTPSampler.port">${basicport_1}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/Login</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://58.240.229.37:8090/Login/Index</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://58.240.229.37:8090</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">max-age=0</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="手工调度" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="so默认配置" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${sohost_1}</stringProp>
              <stringProp name="HTTPSampler.port">${soport_1}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </ConfigTestElement>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询待调度的订单信息" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="sortName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sortName</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sortOrder" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sortOrder</stringProp>
                    <stringProp name="Argument.value">asc</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="WarehouseID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">WarehouseID</stringProp>
                    <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="MemberID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MemberID</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="BeginDate" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">BeginDate</stringProp>
                    <stringProp name="Argument.value">${time2} 00:00:00 </stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="EndDate" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">EndDate</stringProp>
                    <stringProp name="Argument.value"> ${time2} 23:59:59</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ISBanAviation" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ISBanAviation</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsPayment" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsPayment</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Express" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Express</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CustomMemo" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CustomMemo</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Number" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Number</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="City" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">City</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CityID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CityID</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CityLike" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CityLike</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="OrderType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">OrderType</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="IsDispatchFail" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">IsDispatchFail</stringProp>
                    <stringProp name="Argument.value">false</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ShopName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ShopName</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="SortName" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">SortName</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="SortOrder" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">SortOrder</stringProp>
                    <stringProp name="Argument.value">asc</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/Order/OrderScheduling/OrderSchedulingDetailQuery</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://172.16.20.6:8011/Order/OrderScheduling/DispatchView?systemCode=wms</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="the_request_service" elementType="Header">
                    <stringProp name="Header.name">the_request_service</stringProp>
                    <stringProp name="Header.value">wms</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">OrderID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;OrderID&quot;:(.+?),</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default"></stringProp>
                <stringProp name="RegexExtractor.match_number">-1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="3506649">rows</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach控制器" enabled="true">
              <stringProp name="ForeachController.inputVal">OrderID</stringProp>
              <stringProp name="ForeachController.returnVal">OrderID</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
            </ForeachController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行手工调度" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="orderIds" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">orderIds</stringProp>
                      <stringProp name="Argument.value">${OrderID},</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="expressNetPointId" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">expressNetPointId</stringProp>
                      <stringProp name="Argument.value">25108</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="WarehouseID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">WarehouseID</stringProp>
                      <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="expressNetPointName" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">expressNetPointName</stringProp>
                      <stringProp name="Argument.value">测试邮政网点test</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/Order/OrderScheduling/Dispatch</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://172.16.20.6:8011/Order/OrderScheduling/DispatchView?systemCode=wms</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">http://172.16.20.6:8011</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="the_request_service" elementType="Header">
                      <stringProp name="Header.name">the_request_service</stringProp>
                      <stringProp name="Header.value">wms</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="3569038">true</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="创建波次" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="os默认配置" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${oshost_1}</stringProp>
              <stringProp name="HTTPSampler.port">${osport_1}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </ConfigTestElement>
            <hashTree/>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="常用分拣创建波次" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="常用分拣创建波次" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">1</stringProp>
              </LoopController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="创建笼车波次" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="query[CreateTime]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[CreateTime]</stringProp>
                        <stringProp name="Argument.value">${time2} 00:00:00 ~ ${time2} 23:59:59</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[WareHouseName][]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[WareHouseName][]</stringProp>
                        <stringProp name="Argument.value">${warehousename_1}~${membername_1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[WareHouseName][]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[WareHouseName][]</stringProp>
                        <stringProp name="Argument.value">${warehousename_1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[MemberNo]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[MemberNo]</stringProp>
                        <stringProp name="Argument.value">${memberno_1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[MemberID]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[MemberID]</stringProp>
                        <stringProp name="Argument.value">${memberID_1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[WarehouseID]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[WarehouseID]</stringProp>
                        <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[Destination]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[Destination]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[CityID]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[CityID]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[Remark]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[Remark]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[OutTime]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[OutTime]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[ShopName]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[ShopName]</stringProp>
                        <stringProp name="Argument.value">请选择</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[PayTime]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[PayTime]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[Area]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[Area]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[IsThermalPrintNetPoint]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[IsThermalPrintNetPoint]</stringProp>
                        <stringProp name="Argument.value">true</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[Gifts]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[Gifts]</stringProp>
                        <stringProp name="Argument.value">请选择</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[PackageSize]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[PackageSize]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[SendingPoint]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[SendingPoint]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[NetPointID]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[NetPointID]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[MinSKUAmount]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[MinSKUAmount]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[MaxSKUAmount]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[MaxSKUAmount]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[MinAmount]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[MinAmount]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[MaxAmount]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[MaxAmount]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[ShopTag]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[ShopTag]</stringProp>
                        <stringProp name="Argument.value">请选择</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[GroupNum]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[GroupNum]</stringProp>
                        <stringProp name="Argument.value">10</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[PickType]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[PickType]</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[ShopNames]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[ShopNames]</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[ISNaked]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[ISNaked]</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[IsOOS]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[IsOOS]</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[IsNoTaobao]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[IsNoTaobao]</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[IsJD]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[IsJD]</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[IsNoGroup]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[IsNoGroup]</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="query[IsUrgency]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">query[IsUrgency]</stringProp>
                        <stringProp name="Argument.value">false</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="batchType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">batchType</stringProp>
                        <stringProp name="Argument.value">3</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="minBatchOrderQuantity" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">minBatchOrderQuantity</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="maxBatchOrderQuantity" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">maxBatchOrderQuantity</stringProp>
                        <stringProp name="Argument.value">100</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="generateBatchCount" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">generateBatchCount</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/Order/CommonBuying/SaveBatchOrder</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="TestPlan.comments">batchType：1 = 散单 2 = 单SKU 3 = 笼车</stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">http://172.16.20.6:8068/Order/CommonBuying/CommonBuying?systemCode=wms</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">http://172.16.20.6:8068</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="X-Requested-With" elementType="Header">
                        <stringProp name="Header.name">X-Requested-With</stringProp>
                        <stringProp name="Header.value">XMLHttpRequest</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="the_request_service" elementType="Header">
                        <stringProp name="Header.name">the_request_service</stringProp>
                        <stringProp name="Header.value">wms</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="3569038">true</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="订单生产" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">1</stringProp>
          </LoopController>
          <hashTree>
            <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="os站点" enabled="true">
              <boolProp name="LoopController.continue_forever">true</boolProp>
              <stringProp name="LoopController.loops">1</stringProp>
            </LoopController>
            <hashTree>
              <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="os默认配置" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${oshost_1}</stringProp>
                <stringProp name="HTTPSampler.port">${osport_1}</stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path"></stringProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </ConfigTestElement>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询已审核的波次" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="sortName" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">sortName</stringProp>
                      <stringProp name="Argument.value">CreateDate</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="sortOrder" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">sortOrder</stringProp>
                      <stringProp name="Argument.value">desc</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="pageSize" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">pageSize</stringProp>
                      <stringProp name="Argument.value">100</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="pageNumber" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">pageNumber</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CreateTime" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">${time2} 00:00:00 ~ ${time2} 23:59:59</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">CreateTime</stringProp>
                    </elementProp>
                    <elementProp name="WareHouseName[]" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">${warehousename_1}~${membername_1}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">WareHouseName[]</stringProp>
                    </elementProp>
                    <elementProp name="WareHouseName[]" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">WareHouseName[]</stringProp>
                    </elementProp>
                    <elementProp name="MemberNo" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${memberno_1}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">MemberNo</stringProp>
                    </elementProp>
                    <elementProp name="MemberID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${memberID_1}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">MemberID</stringProp>
                    </elementProp>
                    <elementProp name="WarehouseID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">WarehouseID</stringProp>
                    </elementProp>
                    <elementProp name="OrderStatus" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">OrderStatus</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="OrderType" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">OrderType</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="DeliveryPlanTime" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">DeliveryPlanTime</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="OrderBatchID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">OrderBatchID</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="PickType" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">PickType</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="BatchAttribute" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">BatchAttribute</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="PageSize" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">PageSize</stringProp>
                      <stringProp name="Argument.value">100</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="PageCurrent" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">PageCurrent</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                <stringProp name="HTTPSampler.path">/Order/OrderSorting/Query</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://172.16.20.6:8068/Order/OrderSorting/OrderSorting?systemCode=wms&amp;moduleTitle=%E6%B3%A2%E6%AC%A1%E7%AE%A1%E7%90%86</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                    </elementProp>
                    <elementProp name="X-Requested-With" elementType="Header">
                      <stringProp name="Header.name">X-Requested-With</stringProp>
                      <stringProp name="Header.value">XMLHttpRequest</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                    </elementProp>
                    <elementProp name="the_request_service" elementType="Header">
                      <stringProp name="Header.name">the_request_service</stringProp>
                      <stringProp name="Header.value">wms</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">Batchs</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;BatchId&quot;:(.+?),&quot;BatchCode&quot;:&quot;(.+?)&quot;,</stringProp>
                  <stringProp name="RegexExtractor.template">$1$;$2$</stringProp>
                  <stringProp name="RegexExtractor.default">0</stringProp>
                  <stringProp name="RegexExtractor.match_number">-1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
                  <stringProp name="ConstantTimer.delay">300000</stringProp>
                </ConstantTimer>
                <hashTree/>
              </hashTree>
              <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach控制器" enabled="true">
                <stringProp name="ForeachController.inputVal">Batchs</stringProp>
                <stringProp name="ForeachController.returnVal">BatchIda</stringProp>
                <boolProp name="ForeachController.useSeparator">true</boolProp>
              </ForeachController>
              <hashTree>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BatchId" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">BatchId</stringProp>
                  <stringProp name="RegexExtractor.regex">(.+);</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Scope.variable">BatchIda</stringProp>
                  <stringProp name="Sample.scope">variable</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BatchCode" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">BatchCode</stringProp>
                  <stringProp name="RegexExtractor.regex">.+?;(.+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default"></stringProp>
                  <stringProp name="RegexExtractor.match_number">0</stringProp>
                  <stringProp name="Sample.scope">variable</stringProp>
                  <stringProp name="Scope.variable">BatchIda</stringProp>
                </RegexExtractor>
                <hashTree/>
                <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                  <boolProp name="displayJMeterProperties">false</boolProp>
                  <boolProp name="displayJMeterVariables">true</boolProp>
                  <boolProp name="displaySystemProperties">false</boolProp>
                </DebugSampler>
                <hashTree/>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="确认打印波次" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="batchIds[]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">batchIds[]</stringProp>
                        <stringProp name="Argument.value">${BatchId}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="WarehouseID" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">WarehouseID</stringProp>
                        <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/Order/OrderSorting/ConfirmPrint</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">http://172.16.20.6:8068/Order/OrderSorting/OrderSorting?systemCode=wms&amp;moduleTitle=%E6%B3%A2%E6%AC%A1%E7%AE%A1%E7%90%86</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">http://172.16.20.6:8068</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="X-Requested-With" elementType="Header">
                        <stringProp name="Header.name">X-Requested-With</stringProp>
                        <stringProp name="Header.value">XMLHttpRequest</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="the_request_service" elementType="Header">
                        <stringProp name="Header.name">the_request_service</stringProp>
                        <stringProp name="Header.value">wms</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="3569038">true</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.custom_message"></stringProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">16</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询已审核的单SKU波次波次" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="sortName" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">sortName</stringProp>
                        <stringProp name="Argument.value">CreateDate</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="sortOrder" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">sortOrder</stringProp>
                        <stringProp name="Argument.value">desc</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="pageSize" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">pageSize</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="pageNumber" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">pageNumber</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="CreateTime" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.value">2019-12-22 00:00:00 ~ ${time2} 23:59:59</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">CreateTime</stringProp>
                      </elementProp>
                      <elementProp name="WareHouseName[]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.value">${warehousename_1}~${membername_1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">WareHouseName[]</stringProp>
                      </elementProp>
                      <elementProp name="WareHouseName[]" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">WareHouseName[]</stringProp>
                      </elementProp>
                      <elementProp name="MemberNo" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${memberno_1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MemberNo</stringProp>
                      </elementProp>
                      <elementProp name="MemberID" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${memberID_1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">MemberID</stringProp>
                      </elementProp>
                      <elementProp name="WarehouseID" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">WarehouseID</stringProp>
                      </elementProp>
                      <elementProp name="OrderStatus" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">OrderStatus</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="OrderType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">OrderType</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="DeliveryPlanTime" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">DeliveryPlanTime</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="OrderBatchID" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">OrderBatchID</stringProp>
                        <stringProp name="Argument.value">${BatchCode}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="PickType" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">PickType</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="BatchAttribute" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">BatchAttribute</stringProp>
                        <stringProp name="Argument.value">0</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="PageSize" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">PageSize</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="PageCurrent" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">PageCurrent</stringProp>
                        <stringProp name="Argument.value">1</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.protocol">http</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                  <stringProp name="HTTPSampler.path">/Order/OrderSorting/Query</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">http://172.16.20.6:8068/Order/OrderSorting/OrderSorting?systemCode=wms&amp;moduleTitle=%E6%B3%A2%E6%AC%A1%E7%AE%A1%E7%90%86</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                      </elementProp>
                      <elementProp name="X-Requested-With" elementType="Header">
                        <stringProp name="Header.name">X-Requested-With</stringProp>
                        <stringProp name="Header.value">XMLHttpRequest</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="the_request_service" elementType="Header">
                        <stringProp name="Header.name">the_request_service</stringProp>
                        <stringProp name="Header.value">wms</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BatchTypeName" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">BatchTypeName</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;BatchTypeName&quot;:&quot;(.+?)&quot;,</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">0</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                </hashTree>
                <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="打印" enabled="true">
                  <boolProp name="LoopController.continue_forever">true</boolProp>
                  <stringProp name="LoopController.loops">1</stringProp>
                </LoopController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进入波次明细页面" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="batchId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">batchId</stringProp>
                          <stringProp name="Argument.value">${BatchId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="WarehouseID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">WarehouseID</stringProp>
                          <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="systemCode" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">systemCode</stringProp>
                          <stringProp name="Argument.value">wms</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">http</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/Order/OrderSorting/OrderSortingDetail</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8090/Home/Index?systemCode=wms</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                          <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                          <stringProp name="Header.value">1</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取波次内订单信息" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="WarehouseID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">WarehouseID</stringProp>
                          <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="batchId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">batchId</stringProp>
                          <stringProp name="Argument.value">${BatchId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">http</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/Order/OrderSorting/OrderSortingDetailOrders</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068/Order/OrderSorting/OrderSortingDetail?batchId=179364701&amp;WarehouseID=25302&amp;systemCode=wms</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="the_request_service" elementType="Header">
                          <stringProp name="Header.name">the_request_service</stringProp>
                          <stringProp name="Header.value">wms</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                      <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                      <stringProp name="RegexExtractor.refname">SaleOrderCode</stringProp>
                      <stringProp name="RegexExtractor.regex">&quot;SaleOrderCode&quot;:&quot;(.+?)&quot;</stringProp>
                      <stringProp name="RegexExtractor.template">$1$</stringProp>
                      <stringProp name="RegexExtractor.default">0</stringProp>
                      <stringProp name="RegexExtractor.match_number">-1</stringProp>
                    </RegexExtractor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="波次明细信息" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="sortName" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">sortName</stringProp>
                          <stringProp name="Argument.value">BatchNO</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="sortOrder" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">sortOrder</stringProp>
                          <stringProp name="Argument.value">asc</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="memberId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">memberId</stringProp>
                          <stringProp name="Argument.value">${memberID_1}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="WarehouseID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">WarehouseID</stringProp>
                          <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="batchId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">batchId</stringProp>
                          <stringProp name="Argument.value">${BatchId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol">http</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/Order/OrderSorting/OrderSortingDetailOutOfStock</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068/Order/OrderSorting/OrderSortingDetail?batchId=179364701&amp;WarehouseID=25302&amp;systemCode=wms</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="the_request_service" elementType="Header">
                          <stringProp name="Header.name">the_request_service</stringProp>
                          <stringProp name="Header.value">wms</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="验证是否已打印" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="WarehouseID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">WarehouseID</stringProp>
                          <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="batchId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">batchId</stringProp>
                          <stringProp name="Argument.value">${BatchId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/Order/Print/GetIsBatchIsPrint</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068/Order/OrderSorting/OrderSorting?systemCode=wms&amp;moduleTitle=%E6%B3%A2%E6%AC%A1%E7%AE%A1%E7%90%86</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="the_request_service" elementType="Header">
                          <stringProp name="Header.name">the_request_service</stringProp>
                          <stringProp name="Header.value">wms</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取打印信息" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="WareHouseID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">WareHouseID</stringProp>
                          <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="BatchId[]" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.name">BatchId[]</stringProp>
                          <stringProp name="Argument.value">${BatchId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="isQueryHistoryData" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">isQueryHistoryData</stringProp>
                          <stringProp name="Argument.value">false</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/Order/Print/PickingList</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068/Order/OrderSorting/OrderSorting?systemCode=wms&amp;moduleTitle=%E6%B3%A2%E6%AC%A1%E7%AE%A1%E7%90%86</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="the_request_service" elementType="Header">
                          <stringProp name="Header.name">the_request_service</stringProp>
                          <stringProp name="Header.value">wms</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1993902406">Member</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                    <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="orderids" enabled="true">
                      <boolProp name="resetInterpreter">false</boolProp>
                      <stringProp name="parameters"></stringProp>
                      <stringProp name="filename"></stringProp>
                      <stringProp name="script">import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray; 
import com.alibaba.fastjson.JSONObject;

String response = prev.getResponseDataAsString(); 

JSONArray listArray = JSONArray.parseArray(response);

String warehouseID = vars.get(&quot;warehouseID_1&quot;);
String batchID = vars.get(&quot;BatchId&quot;);


int len = listArray.size();

StringBuffer sBuffer = new StringBuffer(&quot;&quot;);

String[] temp = new String[len];

sBuffer.append(&quot;WareHouseID=&quot;).append(warehouseID).append(&quot;&amp;batchId=&quot;).append(batchID);

String orderID = listArray.getJSONObject(0).getString(&quot;OrderID&quot;);

vars.put(&quot;orderID&quot;,orderID);

for(int i=0;i&lt;len;i++){

	temp[i] = listArray.getJSONObject(i).getString(&quot;OrderID&quot;);
	
	sBuffer.append(&quot;&amp;orderIds%5B%5D=&quot;).append(temp[i]);
	
	}

sBuffer.append(&quot;&amp;netpointId=false&amp;isQueryHistoryData=false&quot;);


String keywordStr = sBuffer.toString();

vars.put(&quot;orderids&quot;,keywordStr);

	

</stringProp>
                    </BeanShellPostProcessor>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="更改波次打印状态" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="WarehouseID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">WarehouseID</stringProp>
                          <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="batchId" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">batchId</stringProp>
                          <stringProp name="Argument.value">${BatchId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/Order/OrderSorting/UpdateBatchIsPrintTrue</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068/Order/OrderSorting/OrderSorting?systemCode=wms&amp;moduleTitle=%E6%B3%A2%E6%AC%A1%E7%AE%A1%E7%90%86</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="the_request_service" elementType="Header">
                          <stringProp name="Header.name">the_request_service</stringProp>
                          <stringProp name="Header.value">wms</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="3569038">true</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取打印快递单URL" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="elementType" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">elementType</stringProp>
                          <stringProp name="Argument.value">GetJoinUrl</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="jumpUrl" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.name">jumpUrl</stringProp>
                          <stringProp name="Argument.value">/Order/OrderSorting/PrintExpressOrder/${BatchId_1}?WarehouseID=${warehouseID_1}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="jumpSiteConfigKey" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">jumpSiteConfigKey</stringProp>
                          <stringProp name="Argument.value"></stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/Basedata/GetBaseData</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068/Order/OrderSorting/OrderSorting?systemCode=wms&amp;moduleTitle=%E6%B3%A2%E6%AC%A1%E7%AE%A1%E7%90%86</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="the_request_service" elementType="Header">
                          <stringProp name="Header.name">the_request_service</stringProp>
                          <stringProp name="Header.value">wms</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进入打印快递单页面" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="WarehouseID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">WarehouseID</stringProp>
                          <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="systemCode" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">systemCode</stringProp>
                          <stringProp name="Argument.value">wms</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path">/Order/OrderSorting/PrintExpressOrder/${BatchId}</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8090/Home/Index?systemCode=wms</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                          <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                          <stringProp name="Header.value">1</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-868720458">&lt;title&gt;打印快递单&lt;/title</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="波次管理打印面单" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">${orderids}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/Order/Print/ExpressList</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    <stringProp name="TestPlan.comments">散单配置该环节不打印</stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068/Order/OrderSorting/PrintExpressOrder/179355701?WarehouseID=25302&amp;systemCode=wms</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="the_request_service" elementType="Header">
                          <stringProp name="Header.name">the_request_service</stringProp>
                          <stringProp name="Header.value">wms</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="2104387597">Fineex</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="打印分拣汇总单" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="WarehouseID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">WarehouseID</stringProp>
                          <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="batchIds[]" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">true</boolProp>
                          <stringProp name="Argument.name">batchIds[]</stringProp>
                          <stringProp name="Argument.value">${BatchId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/Order/Print/GetPrintSortingSummaryListIsPrint</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068/Order/OrderSorting/OrderSorting?systemCode=wms&amp;moduleTitle=%E6%B3%A2%E6%AC%A1%E7%AE%A1%E7%90%86</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">*/*</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="the_request_service" elementType="Header">
                          <stringProp name="Header.name">the_request_service</stringProp>
                          <stringProp name="Header.value">wms</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                  </hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="分拣汇总单" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="WareHouseID" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">WareHouseID</stringProp>
                          <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                        <elementProp name="batchIds" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.name">batchIds</stringProp>
                          <stringProp name="Argument.value">${BatchId}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                          <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain"></stringProp>
                    <stringProp name="HTTPSampler.port"></stringProp>
                    <stringProp name="HTTPSampler.protocol"></stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                    <stringProp name="HTTPSampler.path">/Order/Print/SortingSummaryList</stringProp>
                    <stringProp name="HTTPSampler.method">POST</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Referer" elementType="Header">
                          <stringProp name="Header.name">Referer</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068/Order/OrderSorting/OrderSorting?systemCode=wms&amp;moduleTitle=%E6%B3%A2%E6%AC%A1%E7%AE%A1%E7%90%86</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">http://172.16.20.6:8068</stringProp>
                        </elementProp>
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                        </elementProp>
                        <elementProp name="X-Requested-With" elementType="Header">
                          <stringProp name="Header.name">X-Requested-With</stringProp>
                          <stringProp name="Header.value">XMLHttpRequest</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                        </elementProp>
                        <elementProp name="the_request_service" elementType="Header">
                          <stringProp name="Header.name">the_request_service</stringProp>
                          <stringProp name="Header.value">wms</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                      <collectionProp name="Asserion.test_strings">
                        <stringProp name="-1993902406">Member</stringProp>
                      </collectionProp>
                      <stringProp name="Assertion.custom_message"></stringProp>
                      <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                      <boolProp name="Assertion.assume_success">false</boolProp>
                      <intProp name="Assertion.test_type">16</intProp>
                    </ResponseAssertion>
                    <hashTree/>
                  </hashTree>
                  <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
                    <boolProp name="displayJMeterProperties">false</boolProp>
                    <boolProp name="displayJMeterVariables">true</boolProp>
                    <boolProp name="displaySystemProperties">false</boolProp>
                  </DebugSampler>
                  <hashTree/>
                </hashTree>
                <IfController guiclass="IfControllerPanel" testclass="IfController" testname="笼车分拣" enabled="true">
                  <stringProp name="IfController.condition">&quot;${BatchTypeName}&quot; == &quot;笼车分拣&quot;;</stringProp>
                  <boolProp name="IfController.evaluateAll">false</boolProp>
                </IfController>
                <hashTree>
                  <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="op默认配置" enabled="true">
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                      <collectionProp name="Arguments.arguments"/>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${ophost_1}</stringProp>
                    <stringProp name="HTTPSampler.port">${opport_1}</stringProp>
                    <stringProp name="HTTPSampler.protocol">http</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                    <stringProp name="HTTPSampler.path"></stringProp>
                    <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </ConfigTestElement>
                  <hashTree/>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="接单" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">1</stringProp>
                  </LoopController>
                  <hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进入接单处理模块" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="systemCode" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">systemCode</stringProp>
                            <stringProp name="Argument.value">wms</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="moduleTitle" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.name">moduleTitle</stringProp>
                            <stringProp name="Argument.value">接单处理</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/OrderReceiving/OrderReceiving</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8090/Home/Index?systemCode=wms</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                            <stringProp name="Header.value">1</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="仓库控件" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="elementType" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">elementType</stringProp>
                            <stringProp name="Argument.value">GetUserAllWarehouseData</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="_" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">_</stringProp>
                            <stringProp name="Argument.value">${time3}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Basedata/GetBasedata</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderReceiving/OrderReceiving?systemCode=wms&amp;moduleTitle=%E6%8E%A5%E5%8D%95%E5%A4%84%E7%90%86</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="the_request_service" elementType="Header">
                            <stringProp name="Header.name">the_request_service</stringProp>
                            <stringProp name="Header.value">wms</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="拼接开始接单页面URL" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="elementType" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">elementType</stringProp>
                            <stringProp name="Argument.value">GetJoinUrl</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="jumpUrl" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.name">jumpUrl</stringProp>
                            <stringProp name="Argument.value">/Order/OrderReceiving/OrderProcessing</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="jumpSiteConfigKey" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">jumpSiteConfigKey</stringProp>
                            <stringProp name="Argument.value"></stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Basedata/GetBaseData</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderReceiving/OrderReceiving?systemCode=wms&amp;moduleTitle=%E6%8E%A5%E5%8D%95%E5%A4%84%E7%90%86</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">*/*</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="the_request_service" elementType="Header">
                            <stringProp name="Header.name">the_request_service</stringProp>
                            <stringProp name="Header.value">wms</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进入开始接单模块" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="systemCode" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">systemCode</stringProp>
                            <stringProp name="Argument.value">wms</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/OrderReceiving/OrderProcessing</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8090/Home/Index?systemCode=wms</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                            <stringProp name="Header.value">1</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="输入工号并接单1" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="UserNO" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">UserNO</stringProp>
                            <stringProp name="Argument.value">123456</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="WarehouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WarehouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/OrderReceiving/VerificationUserCode</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderReceiving/OrderProcessing?systemCode=wms</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">*/*</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="the_request_service" elementType="Header">
                            <stringProp name="Header.name">the_request_service</stringProp>
                            <stringProp name="Header.value">wms</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="输入工号并接单2" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="UserNO" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">UserNO</stringProp>
                            <stringProp name="Argument.value">123456</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="WarehouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WarehouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/OrderReceiving/SaveVerificationUserCode</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderReceiving/OrderProcessing?systemCode=wms</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="the_request_service" elementType="Header">
                            <stringProp name="Header.name">the_request_service</stringProp>
                            <stringProp name="Header.value">wms</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="3569038">true</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">16</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="开始接单完成" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="OrderNo" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">OrderNo</stringProp>
                            <stringProp name="Argument.value">${BatchCode}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="UserNO" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">UserNO</stringProp>
                            <stringProp name="Argument.value">123456</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="CheckUser" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">CheckUser</stringProp>
                            <stringProp name="Argument.value">true</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="WarehouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WarehouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/OrderReceiving/Processing</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderReceiving/OrderProcessing?systemCode=wms</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">*/*</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="the_request_service" elementType="Header">
                            <stringProp name="Header.name">the_request_service</stringProp>
                            <stringProp name="Header.value">wms</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="3569038">true</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">16</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进入完结接单页面" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="systemCode" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">systemCode</stringProp>
                            <stringProp name="Argument.value">wms</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/OrderReceiving/OrderEnd</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8090/Home/Index?systemCode=wms</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                            <stringProp name="Header.value">1</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="完结接单完成" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="OrderNo" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">OrderNo</stringProp>
                            <stringProp name="Argument.value">${BatchCode}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="UserNO" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">UserNO</stringProp>
                            <stringProp name="Argument.value">123456</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="CheckUser" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">CheckUser</stringProp>
                            <stringProp name="Argument.value">false</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="WarehouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WarehouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/OrderReceiving/End</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderReceiving/OrderEnd?systemCode=wms</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">*/*</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="the_request_service" elementType="Header">
                            <stringProp name="Header.name">the_request_service</stringProp>
                            <stringProp name="Header.value">wms</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                        <collectionProp name="Asserion.test_strings">
                          <stringProp name="3569038">true</stringProp>
                        </collectionProp>
                        <stringProp name="Assertion.custom_message"></stringProp>
                        <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                        <boolProp name="Assertion.assume_success">false</boolProp>
                        <intProp name="Assertion.test_type">16</intProp>
                      </ResponseAssertion>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="二次分拨" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">1</stringProp>
                  </LoopController>
                  <hashTree>
                    <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="opr默认配置" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${oprhost_1}</stringProp>
                      <stringProp name="HTTPSampler.port">${oprport_1}</stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path"></stringProp>
                      <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </ConfigTestElement>
                    <hashTree/>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进入二次分拨模块" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="systemCode" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">systemCode</stringProp>
                            <stringProp name="Argument.value">wms</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="moduleTitle" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.name">moduleTitle</stringProp>
                            <stringProp name="Argument.value">二次分拨</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="WarehouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WarehouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/SecondaryDistribution/SecondaryDistribution</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8090/Home/Index</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                            <stringProp name="Header.value">1</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="是否开启流水线" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="WarehouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WarehouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/SecondaryDistribution/GetOpenFlowLine</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097/Order/SecondaryDistribution/SecondaryDistribution?systemCode=wms&amp;moduleTitle=%E4%BA%8C%E6%AC%A1%E5%88%86%E6%8B%A8&amp;WarehouseID=25302</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">*/*</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="the_request_service" elementType="Header">
                            <stringProp name="Header.name">the_request_service</stringProp>
                            <stringProp name="Header.value">wms</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="二次分拨输入波次号" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="code" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">code</stringProp>
                            <stringProp name="Argument.value">${BatchCode}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="WareHouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WareHouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="RunningID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">RunningID</stringProp>
                            <stringProp name="Argument.value">0</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="IsConfig" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">IsConfig</stringProp>
                            <stringProp name="Argument.value">false</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/Order/SecondaryDistribution/SecondaryDistributionDetail</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097/Order/SecondaryDistribution/SecondaryDistribution?systemCode=wms&amp;moduleTitle=%E4%BA%8C%E6%AC%A1%E5%88%86%E6%8B%A8&amp;WarehouseID=25302</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">*/*</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="the_request_service" elementType="Header">
                            <stringProp name="Header.name">the_request_service</stringProp>
                            <stringProp name="Header.value">wms</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="释放容器" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="WareHouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WareHouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="code" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">code</stringProp>
                            <stringProp name="Argument.value">${BatchCode}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/SecondaryDistribution/DelBatchLPNRelation</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097/Order/SecondaryDistribution/SecondaryDistribution?systemCode=wms&amp;moduleTitle=%E4%BA%8C%E6%AC%A1%E5%88%86%E6%8B%A8&amp;WarehouseID=25302</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">*/*</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="the_request_service" elementType="Header">
                            <stringProp name="Header.name">the_request_service</stringProp>
                            <stringProp name="Header.value">wms</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="复核" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">1</stringProp>
                  </LoopController>
                  <hashTree>
                    <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="opr默认配置" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${oprhost_1}</stringProp>
                      <stringProp name="HTTPSampler.port">${oprport_1}</stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path"></stringProp>
                      <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </ConfigTestElement>
                    <hashTree/>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="打开分拣复核模块" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="systemCode" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">systemCode</stringProp>
                            <stringProp name="Argument.value">wms</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="moduleTitle" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.name">moduleTitle</stringProp>
                            <stringProp name="Argument.value">分拣复核</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="WarehouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WarehouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/OrderRecheck/OrderRecheck</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8090/Home/Index</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                            <stringProp name="Header.value">1</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="是否开启流水线" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="WarehouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WarehouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                      <stringProp name="HTTPSampler.path">/Order/OrderRecheck/GetOpenFlowLine</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderRecheck/OrderRecheck?systemCode=wms&amp;moduleTitle=%E5%88%86%E6%8B%A3%E5%A4%8D%E6%A0%B8&amp;WarehouseID=25302</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">*/*</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="the_request_service" elementType="Header">
                            <stringProp name="Header.name">the_request_service</stringProp>
                            <stringProp name="Header.value">wms</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="遍历波次内发货单号" enabled="true">
                      <stringProp name="ForeachController.inputVal">SaleOrderCode</stringProp>
                      <stringProp name="ForeachController.returnVal">SaleOrderCode</stringProp>
                      <boolProp name="ForeachController.useSeparator">true</boolProp>
                    </ForeachController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复核输入发货单号" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="recheckCode" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">recheckCode</stringProp>
                              <stringProp name="Argument.value">${SaleOrderCode}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="WarehouseID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WarehouseID</stringProp>
                              <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol">http</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/Order/OrderRecheck/GetOrder</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderRecheck/OrderRecheck?systemCode=wms&amp;moduleTitle=%E5%88%86%E6%8B%A3%E5%A4%8D%E6%A0%B8&amp;WarehouseID=25302</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">*/*</stringProp>
                            </elementProp>
                            <elementProp name="X-Requested-With" elementType="Header">
                              <stringProp name="Header.name">X-Requested-With</stringProp>
                              <stringProp name="Header.value">XMLHttpRequest</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="the_request_service" elementType="Header">
                              <stringProp name="Header.name">the_request_service</stringProp>
                              <stringProp name="Header.value">wms</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                          <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                          <stringProp name="RegexExtractor.refname">OrderID</stringProp>
                          <stringProp name="RegexExtractor.regex">&quot;OrderID&quot;:(.+?),</stringProp>
                          <stringProp name="RegexExtractor.template">$1$</stringProp>
                          <stringProp name="RegexExtractor.default"></stringProp>
                          <stringProp name="RegexExtractor.match_number">1</stringProp>
                        </RegexExtractor>
                        <hashTree/>
                        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                          <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                          <stringProp name="RegexExtractor.refname">OrderWeight</stringProp>
                          <stringProp name="RegexExtractor.regex">&quot;OrderWeight&quot;:(.+?)\.</stringProp>
                          <stringProp name="RegexExtractor.template">$1$</stringProp>
                          <stringProp name="RegexExtractor.default"></stringProp>
                          <stringProp name="RegexExtractor.match_number">1</stringProp>
                        </RegexExtractor>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="3569038">true</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                          <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">16</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="打印合格证" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="WareHouseID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WareHouseID</stringProp>
                              <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="MemberID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">MemberID</stringProp>
                              <stringProp name="Argument.value">${memberID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="orderIds[]" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.name">orderIds[]</stringProp>
                              <stringProp name="Argument.value">${OrderID}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol">http</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/Order/Print/GetCommodityIdentifierPrintData</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderRecheck/OrderRecheck?systemCode=wms&amp;moduleTitle=%E5%88%86%E6%8B%A3%E5%A4%8D%E6%A0%B8&amp;WarehouseID=25302</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                            </elementProp>
                            <elementProp name="X-Requested-With" elementType="Header">
                              <stringProp name="Header.name">X-Requested-With</stringProp>
                              <stringProp name="Header.value">XMLHttpRequest</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="the_request_service" elementType="Header">
                              <stringProp name="Header.name">the_request_service</stringProp>
                              <stringProp name="Header.value">wms</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="查询订单子包裹" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="WarehouseID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WarehouseID</stringProp>
                              <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="OrderID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">OrderID</stringProp>
                              <stringProp name="Argument.value">${OrderID}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="MemberID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">MemberID</stringProp>
                              <stringProp name="Argument.value">${memberID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol">http</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/Order/OrderRecheck/GetOrderPackage</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderRecheck/OrderRecheck?systemCode=wms&amp;moduleTitle=%E5%88%86%E6%8B%A3%E5%A4%8D%E6%A0%B8&amp;WarehouseID=25302</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">*/*</stringProp>
                            </elementProp>
                            <elementProp name="X-Requested-With" elementType="Header">
                              <stringProp name="Header.name">X-Requested-With</stringProp>
                              <stringProp name="Header.value">XMLHttpRequest</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="the_request_service" elementType="Header">
                              <stringProp name="Header.name">the_request_service</stringProp>
                              <stringProp name="Header.value">wms</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="复核确认" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="WarehouseID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WarehouseID</stringProp>
                              <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="MemberID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">MemberID</stringProp>
                              <stringProp name="Argument.value">${memberID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="OrderID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">OrderID</stringProp>
                              <stringProp name="Argument.value">${OrderID}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="IsPack" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">IsPack</stringProp>
                              <stringProp name="Argument.value">false</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="BoxID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">BoxID</stringProp>
                              <stringProp name="Argument.value"></stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="BatchTypeID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">BatchTypeID</stringProp>
                              <stringProp name="Argument.value">3</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="NextOut" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">NextOut</stringProp>
                              <stringProp name="Argument.value">false</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="RunningID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">RunningID</stringProp>
                              <stringProp name="Argument.value">0</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="TheoryWeight" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">TheoryWeight</stringProp>
                              <stringProp name="Argument.value">${OrderWeight}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="HavePackage" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">HavePackage</stringProp>
                              <stringProp name="Argument.value">false</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="SyncOrder" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">SyncOrder</stringProp>
                              <stringProp name="Argument.value">false</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="OrderControl" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">OrderControl</stringProp>
                              <stringProp name="Argument.value">false</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="WeightOut" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WeightOut</stringProp>
                              <stringProp name="Argument.value">false</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="WeightOutScan" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WeightOutScan</stringProp>
                              <stringProp name="Argument.value">false</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol">http</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/Order/OrderRecheck/ReviewConfirm</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderRecheck/OrderRecheck?systemCode=wms&amp;moduleTitle=%E5%88%86%E6%8B%A3%E5%A4%8D%E6%A0%B8&amp;WarehouseID=25302</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">*/*</stringProp>
                            </elementProp>
                            <elementProp name="X-Requested-With" elementType="Header">
                              <stringProp name="Header.name">X-Requested-With</stringProp>
                              <stringProp name="Header.value">XMLHttpRequest</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="the_request_service" elementType="Header">
                              <stringProp name="Header.name">the_request_service</stringProp>
                              <stringProp name="Header.value">wms</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="3569038">true</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                          <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">16</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="打印面单" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="WareHouseID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WareHouseID</stringProp>
                              <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="orderIds[]" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.name">orderIds[]</stringProp>
                              <stringProp name="Argument.value">${OrderID}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol">http</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/Order/Print/ExpressList</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderRecheck/OrderRecheck?systemCode=wms&amp;moduleTitle=%E5%88%86%E6%8B%A3%E5%A4%8D%E6%A0%B8&amp;WarehouseID=25302</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                            </elementProp>
                            <elementProp name="X-Requested-With" elementType="Header">
                              <stringProp name="Header.name">X-Requested-With</stringProp>
                              <stringProp name="Header.value">XMLHttpRequest</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="the_request_service" elementType="Header">
                              <stringProp name="Header.name">the_request_service</stringProp>
                              <stringProp name="Header.value">wms</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                  <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="包装出库" enabled="true">
                    <boolProp name="LoopController.continue_forever">true</boolProp>
                    <stringProp name="LoopController.loops">1</stringProp>
                  </LoopController>
                  <hashTree>
                    <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="opw默认配置" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${opwhost_1}</stringProp>
                      <stringProp name="HTTPSampler.port">${opwport_1}</stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path"></stringProp>
                      <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </ConfigTestElement>
                    <hashTree/>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="进入包装称重模块" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="systemCode" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">systemCode</stringProp>
                            <stringProp name="Argument.value">wms</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="moduleTitle" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">true</boolProp>
                            <stringProp name="Argument.name">moduleTitle</stringProp>
                            <stringProp name="Argument.value">包装称重</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="WarehouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WarehouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/OrderDispose/ParcelWeigh</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8090/Home/Index?systemCode=wms</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                            <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                            <stringProp name="Header.value">1</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                      <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                        <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                        <stringProp name="RegexExtractor.refname">BoxID</stringProp>
                        <stringProp name="RegexExtractor.regex">BoxID&amp;quot;:(.+?),</stringProp>
                        <stringProp name="RegexExtractor.template">$1$</stringProp>
                        <stringProp name="RegexExtractor.default"></stringProp>
                        <stringProp name="RegexExtractor.match_number">1</stringProp>
                      </RegexExtractor>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="是否开启流水线" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="WarehouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WarehouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/OrderDispose/GetOpenFlowLine</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderDispose/ParcelWeigh?systemCode=wms&amp;moduleTitle=%E5%8C%85%E8%A3%85%E7%A7%B0%E9%87%8D&amp;WarehouseID=25302</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">*/*</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="the_request_service" elementType="Header">
                            <stringProp name="Header.name">the_request_service</stringProp>
                            <stringProp name="Header.value">wms</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="检查待出库包裹" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments">
                          <elementProp name="WareHouseID" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">WareHouseID</stringProp>
                            <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                          <elementProp name="TransOrderIDs" elementType="HTTPArgument">
                            <boolProp name="HTTPArgument.always_encode">false</boolProp>
                            <stringProp name="Argument.name">TransOrderIDs</stringProp>
                            <stringProp name="Argument.value"></stringProp>
                            <stringProp name="Argument.metadata">=</stringProp>
                            <boolProp name="HTTPArgument.use_equals">true</boolProp>
                          </elementProp>
                        </collectionProp>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain"></stringProp>
                      <stringProp name="HTTPSampler.port"></stringProp>
                      <stringProp name="HTTPSampler.protocol">http</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                      <stringProp name="HTTPSampler.path">/Order/OrderDispose/VerificationOutPackage</stringProp>
                      <stringProp name="HTTPSampler.method">POST</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Referer" elementType="Header">
                            <stringProp name="Header.name">Referer</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderDispose/ParcelWeigh?systemCode=wms&amp;moduleTitle=%E5%8C%85%E8%A3%85%E7%A7%B0%E9%87%8D&amp;WarehouseID=25302</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">*/*</stringProp>
                          </elementProp>
                          <elementProp name="X-Requested-With" elementType="Header">
                            <stringProp name="Header.name">X-Requested-With</stringProp>
                            <stringProp name="Header.value">XMLHttpRequest</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="the_request_service" elementType="Header">
                            <stringProp name="Header.name">the_request_service</stringProp>
                            <stringProp name="Header.value">wms</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="遍历波次内发货单号" enabled="true">
                      <stringProp name="ForeachController.inputVal">SaleOrderCode</stringProp>
                      <stringProp name="ForeachController.returnVal">SaleOrderCode</stringProp>
                      <boolProp name="ForeachController.useSeparator">true</boolProp>
                    </ForeachController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="包装称重输入发货单号" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="OrderCode" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">OrderCode</stringProp>
                              <stringProp name="Argument.value">${SaleOrderCode}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="WarehouseID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WarehouseID</stringProp>
                              <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol">http</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/Order/OrderDispose/Query</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderDispose/ParcelWeigh?systemCode=wms&amp;moduleTitle=%E5%8C%85%E8%A3%85%E7%A7%B0%E9%87%8D&amp;WarehouseID=25302</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">*/*</stringProp>
                            </elementProp>
                            <elementProp name="X-Requested-With" elementType="Header">
                              <stringProp name="Header.name">X-Requested-With</stringProp>
                              <stringProp name="Header.value">XMLHttpRequest</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="the_request_service" elementType="Header">
                              <stringProp name="Header.name">the_request_service</stringProp>
                              <stringProp name="Header.value">wms</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                          <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                          <stringProp name="RegexExtractor.refname">OrderID</stringProp>
                          <stringProp name="RegexExtractor.regex">&quot;OrderID&quot;:(.+?),</stringProp>
                          <stringProp name="RegexExtractor.template">$1$</stringProp>
                          <stringProp name="RegexExtractor.default"></stringProp>
                          <stringProp name="RegexExtractor.match_number">1</stringProp>
                        </RegexExtractor>
                        <hashTree/>
                        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
                          <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                          <stringProp name="RegexExtractor.refname">point</stringProp>
                          <stringProp name="RegexExtractor.regex">&quot;TransOrderID&quot;:(.+?),&quot;ExpressNetPointID&quot;:(.+?),&quot;TheroyWeight&quot;:(.+?)\.0</stringProp>
                          <stringProp name="RegexExtractor.template">$1$,$2$,$3$</stringProp>
                          <stringProp name="RegexExtractor.default"></stringProp>
                          <stringProp name="RegexExtractor.match_number">1</stringProp>
                        </RegexExtractor>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="3569038">true</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                          <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">16</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="获取子包裹信息" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="WarehouseID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WarehouseID</stringProp>
                              <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="OrderID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">OrderID</stringProp>
                              <stringProp name="Argument.value">${OrderID}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="MemberID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">MemberID</stringProp>
                              <stringProp name="Argument.value">${memberID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol">http</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/Order/OrderDispose/GetOrderPackage</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderDispose/ParcelWeigh?systemCode=wms&amp;moduleTitle=%E5%8C%85%E8%A3%85%E7%A7%B0%E9%87%8D&amp;WarehouseID=25302</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">*/*</stringProp>
                            </elementProp>
                            <elementProp name="X-Requested-With" elementType="Header">
                              <stringProp name="Header.name">X-Requested-With</stringProp>
                              <stringProp name="Header.value">XMLHttpRequest</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="the_request_service" elementType="Header">
                              <stringProp name="Header.name">the_request_service</stringProp>
                              <stringProp name="Header.value">wms</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="称重确认" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="OrderID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">OrderID</stringProp>
                              <stringProp name="Argument.value">${OrderID}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="BoxID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">BoxID</stringProp>
                              <stringProp name="Argument.value">${BoxID}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="Weight" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">Weight</stringProp>
                              <stringProp name="Argument.value">${__longSum(${point_g3},1,)}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="WarehouseID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WarehouseID</stringProp>
                              <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="MemberID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">MemberID</stringProp>
                              <stringProp name="Argument.value">${memberID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="IsWaybill" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">IsWaybill</stringProp>
                              <stringProp name="Argument.value">false</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="BatchTypeID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">BatchTypeID</stringProp>
                              <stringProp name="Argument.value">3</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="RunningID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">RunningID</stringProp>
                              <stringProp name="Argument.value">0</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="IsPack" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">IsPack</stringProp>
                              <stringProp name="Argument.value">true</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="SyncOrder" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">SyncOrder</stringProp>
                              <stringProp name="Argument.value">true</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="OrderControl" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">OrderControl</stringProp>
                              <stringProp name="Argument.value">false</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="WeightOut" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WeightOut</stringProp>
                              <stringProp name="Argument.value">false</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="WeightOutScan" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WeightOutScan</stringProp>
                              <stringProp name="Argument.value">false</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="IsNetEase" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">IsNetEase</stringProp>
                              <stringProp name="Argument.value">false</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol">http</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/Order/OrderDispose/OrderConfirm</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderDispose/ParcelWeigh?systemCode=wms&amp;moduleTitle=%E5%8C%85%E8%A3%85%E7%A7%B0%E9%87%8D&amp;WarehouseID=25302</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">*/*</stringProp>
                            </elementProp>
                            <elementProp name="X-Requested-With" elementType="Header">
                              <stringProp name="Header.name">X-Requested-With</stringProp>
                              <stringProp name="Header.value">XMLHttpRequest</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="the_request_service" elementType="Header">
                              <stringProp name="Header.name">the_request_service</stringProp>
                              <stringProp name="Header.value">wms</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="3569038">true</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                          <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">16</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="打印面单" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="WareHouseID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WareHouseID</stringProp>
                              <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="orderIds[]" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.name">orderIds[]</stringProp>
                              <stringProp name="Argument.value">${OrderID}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol">http</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/Order/Print/ExpressList</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderDispose/ParcelWeigh?systemCode=wms&amp;moduleTitle=%E5%8C%85%E8%A3%85%E7%A7%B0%E9%87%8D&amp;WarehouseID=25302</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                            </elementProp>
                            <elementProp name="X-Requested-With" elementType="Header">
                              <stringProp name="Header.name">X-Requested-With</stringProp>
                              <stringProp name="Header.value">XMLHttpRequest</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="the_request_service" elementType="Header">
                              <stringProp name="Header.name">the_request_service</stringProp>
                              <stringProp name="Header.value">wms</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="称重完成出库" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="TransOrderIDs" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">TransOrderIDs</stringProp>
                              <stringProp name="Argument.value">${point_g1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="num" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">num</stringProp>
                              <stringProp name="Argument.value">1</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="TransMemberID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">TransMemberID</stringProp>
                              <stringProp name="Argument.value">${point_g2}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                            <elementProp name="WarehouseID" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.name">WarehouseID</stringProp>
                              <stringProp name="Argument.value">${warehouseID_1}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain"></stringProp>
                        <stringProp name="HTTPSampler.port"></stringProp>
                        <stringProp name="HTTPSampler.protocol">http</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/Order/OrderDispose/OutConfirm</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097/Order/OrderDispose/ParcelWeigh?systemCode=wms&amp;moduleTitle=%E5%8C%85%E8%A3%85%E7%A7%B0%E9%87%8D&amp;WarehouseID=25302</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">zh-CN,zh;q=0.9</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">http://172.16.20.6:8097</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">*/*</stringProp>
                            </elementProp>
                            <elementProp name="X-Requested-With" elementType="Header">
                              <stringProp name="Header.name">X-Requested-With</stringProp>
                              <stringProp name="Header.value">XMLHttpRequest</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="the_request_service" elementType="Header">
                              <stringProp name="Header.name">the_request_service</stringProp>
                              <stringProp name="Header.value">wms</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="3569038">true</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                          <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">16</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="释放账号和反馈结果" enabled="true"/>
          <hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="释放登陆账号" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">update auto_testuser set status=0 where testuser=&apos;${user_1}&apos;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames">user</stringProp>
            </JDBCSampler>
            <hashTree/>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="标记任务成功" enabled="true">
              <stringProp name="dataSource">test</stringProp>
              <stringProp name="query">update auto_operation set status=2 where operation=&quot;一票一件&quot;;</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
              <stringProp name="queryType">Update Statement</stringProp>
              <stringProp name="resultSetHandler">Store as String</stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="variableNames"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="检查测试结果" enabled="true">
          <stringProp name="IfController.condition">${control} == 1;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="标记任务最终结果" enabled="true">
            <stringProp name="dataSource">test</stringProp>
            <stringProp name="query">update auto_operation set 
`status`=CASE 
	WHEN `status`=2 THEN 0
		
	ELSE
		3
END 

,
result=CASE 
	WHEN `status`=0 THEN &quot;上次执行：成功&quot;
	WHEN `status`=1 THEN &quot;上次执行：运行中&quot;
	WHEN `status`=2 THEN &quot;上次执行：成功&quot;
		
	ELSE
		&quot;上次执行：失败&quot;
END

where operation=&apos;一票一件&apos;
;
</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
